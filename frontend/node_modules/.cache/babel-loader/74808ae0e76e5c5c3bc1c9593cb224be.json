{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natha\\\\webdev-final-project\\\\frontend\\\\src\\\\components\\\\containers\\\\StudentContainer.js\";\n/*==================================================\r\nStudentContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStudentThunk, deleteStudentThunk } from \"../../store/thunks\";\nimport { StudentView } from \"../views\";\nimport { useParams } from 'react-router-dom';\nimport Header from './Header';\nconst StudentContainer = props => {\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    props.fetchStudent(id);\n  }, [id, props]);\n  const handleDelete = () => {\n    props.deleteStudent(id);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(StudentView, {\n    student: props.student,\n    onDelete: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n};\n\n// The following 2 input arguments are passed to the \"connect\" function used by \"StudentContainer\" to connect to Redux Store.  \n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\nconst mapState = state => {\n  return {\n    student: state.student // Get the State object from Reducer \"student\"\n  };\n};\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nconst mapDispatch = dispatch => {\n  return {\n    fetchStudent: id => dispatch(fetchStudentThunk(id)),\n    deleteStudent: id => dispatch(deleteStudentThunk(id))\n  };\n};\n\n// Export store-connected container by default\n// StudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default connect(mapState, mapDispatch)(StudentContainer);","map":{"version":3,"names":["React","useEffect","connect","fetchStudentThunk","deleteStudentThunk","StudentView","useParams","Header","StudentContainer","props","id","fetchStudent","handleDelete","deleteStudent","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","student","onDelete","mapState","state","mapDispatch","dispatch"],"sources":["C:/Users/natha/webdev-final-project/frontend/src/components/containers/StudentContainer.js"],"sourcesContent":["/*==================================================\r\nStudentContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStudentThunk, deleteStudentThunk } from \"../../store/thunks\";\r\nimport { StudentView } from \"../views\";\r\nimport { useParams } from 'react-router-dom';\r\nimport Header from './Header';\r\n\r\nconst StudentContainer = (props) => {\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    props.fetchStudent(id);\r\n  }, [id, props]);\r\n\r\n  const handleDelete = () => {\r\n    props.deleteStudent(id);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <StudentView student={props.student} onDelete={handleDelete} />\r\n    </div>\r\n  );\r\n};\r\n\r\n// The following 2 input arguments are passed to the \"connect\" function used by \"StudentContainer\" to connect to Redux Store.  \r\n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\r\nconst mapState = (state) => {\r\n  return {\r\n    student: state.student,  // Get the State object from Reducer \"student\"\r\n  };\r\n};\r\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\r\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\r\n    deleteStudent: (id) => dispatch(deleteStudentThunk(id)),\r\n  };\r\n};\r\n\r\n// Export store-connected container by default\r\n// StudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \r\n// (and re-read the values when the Store State updates).\r\nexport default connect(mapState, mapDispatch)(StudentContainer);"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,iBAAiB,EAAEC,kBAAkB,QAAQ,oBAAoB;AAC1E,SAASC,WAAW,QAAQ,UAAU;AACtC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,UAAU;AAE7B,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EAClC,MAAM;IAAEC;EAAG,CAAC,GAAGJ,SAAS,CAAC,CAAC;EAE1BL,SAAS,CAAC,MAAM;IACdQ,KAAK,CAACE,YAAY,CAACD,EAAE,CAAC;EACxB,CAAC,EAAE,CAACA,EAAE,EAAED,KAAK,CAAC,CAAC;EAEf,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzBH,KAAK,CAACI,aAAa,CAACH,EAAE,CAAC;EACzB,CAAC;EAED,oBACEV,KAAA,CAAAc,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEpB,KAAA,CAAAc,aAAA,CAACP,MAAM;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACVpB,KAAA,CAAAc,aAAA,CAACT,WAAW;IAACgB,OAAO,EAAEZ,KAAK,CAACY,OAAQ;IAACC,QAAQ,EAAEV,YAAa;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC3D,CAAC;AAEV,CAAC;;AAED;AACA;AACA,MAAMG,QAAQ,GAAIC,KAAK,IAAK;EAC1B,OAAO;IACLH,OAAO,EAAEG,KAAK,CAACH,OAAO,CAAG;EAC3B,CAAC;AACH,CAAC;AACD;AACA;AACA,MAAMI,WAAW,GAAIC,QAAQ,IAAK;EAChC,OAAO;IACLf,YAAY,EAAGD,EAAE,IAAKgB,QAAQ,CAACvB,iBAAiB,CAACO,EAAE,CAAC,CAAC;IACrDG,aAAa,EAAGH,EAAE,IAAKgB,QAAQ,CAACtB,kBAAkB,CAACM,EAAE,CAAC;EACxD,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA,eAAeR,OAAO,CAACqB,QAAQ,EAAEE,WAAW,CAAC,CAACjB,gBAAgB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}