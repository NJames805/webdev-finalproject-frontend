{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natha\\\\webdev-final-project\\\\frontend\\\\src\\\\components\\\\containers\\\\AllStudentsContainer.js\";\n/*==================================================\r\nAllStudentsContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\nimport Header from './Header';\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchAllStudentsThunk, deleteStudentThunk } from '../../store/thunks';\nimport AllStudentsView from '../views/AllStudentsView';\nconst AllStudentsContainer = ({\n  fetchAllStudents,\n  allStudents,\n  deleteStudent\n}) => {\n  // Get all students data from back-end database\n  useEffect(() => {\n    fetchAllStudents();\n  }, [fetchAllStudents]);\n\n  // Render All Students view by passing all students data as props to the corresponding View component\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AllStudentsView, {\n    students: allStudents,\n    deleteStudent: deleteStudent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n};\n\n// The following 2 input arguments are passed to the \"connect\" function used by \"AllStudentsContainer\" component to connect to Redux Store.\n// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"allStudents\".\nconst mapState = state => {\n  return {\n    allStudents: state.allStudents // Get the State object from Reducer \"allStudents\"\n  };\n};\n\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nconst mapDispatch = dispatch => {\n  return {\n    fetchAllStudents: () => dispatch(fetchAllStudentsThunk()),\n    deleteStudent: studentId => dispatch(deleteStudentThunk(studentId))\n  };\n};\n\n// Export store-connected container by default\n// AllStudentsContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default connect(mapState, mapDispatch)(AllStudentsContainer);","map":{"version":3,"names":["Header","useEffect","connect","fetchAllStudentsThunk","deleteStudentThunk","AllStudentsView","AllStudentsContainer","fetchAllStudents","allStudents","deleteStudent","React","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","students","mapState","state","mapDispatch","dispatch","studentId"],"sources":["C:/Users/natha/webdev-final-project/frontend/src/components/containers/AllStudentsContainer.js"],"sourcesContent":["/*==================================================\r\nAllStudentsContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\r\nimport Header from './Header';\r\nimport { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { \r\n  fetchAllStudentsThunk,\r\n  deleteStudentThunk\r\n} from '../../store/thunks';\r\n\r\nimport AllStudentsView from '../views/AllStudentsView';\r\n\r\nconst AllStudentsContainer = ({ fetchAllStudents, allStudents, deleteStudent }) => {\r\n  // Get all students data from back-end database\r\n  useEffect(() => {\r\n    fetchAllStudents();\r\n  }, [fetchAllStudents]);\r\n\r\n  // Render All Students view by passing all students data as props to the corresponding View component\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <AllStudentsView \r\n        students={allStudents}\r\n        deleteStudent={deleteStudent}   \r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// The following 2 input arguments are passed to the \"connect\" function used by \"AllStudentsContainer\" component to connect to Redux Store.\r\n// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\r\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"allStudents\".\r\nconst mapState = (state) => {\r\n  return {\r\n    allStudents: state.allStudents,  // Get the State object from Reducer \"allStudents\"\r\n  };\r\n};\r\n\r\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\r\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    fetchAllStudents: () => dispatch(fetchAllStudentsThunk()),\r\n    deleteStudent: (studentId) => dispatch(deleteStudentThunk(studentId)),\r\n  };\r\n};\r\n\r\n// Export store-connected container by default\r\n// AllStudentsContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \r\n// (and re-read the values when the Store State updates).\r\nexport default connect(mapState, mapDispatch)(AllStudentsContainer);"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAM,MAAM,UAAU;AAC7B,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,OAAO,QAAQ,aAAa;AAErC,SACEC,qBAAqB,EACrBC,kBAAkB,QACb,oBAAoB;AAE3B,OAAOC,eAAe,MAAM,0BAA0B;AAEtD,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC,gBAAgB;EAAEC,WAAW;EAAEC;AAAc,CAAC,KAAK;EACjF;EACAR,SAAS,CAAC,MAAM;IACdM,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;;EAEtB;EACA,oBACEG,KAAA,CAAAC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEP,KAAA,CAAAC,aAAA,CAACX,MAAM;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACVP,KAAA,CAAAC,aAAA,CAACN,eAAe;IACda,QAAQ,EAAEV,WAAY;IACtBC,aAAa,EAAEA,aAAc;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC9B,CACE,CAAC;AAEV,CAAC;;AAED;AACA;AACA;AACA,MAAME,QAAQ,GAAIC,KAAK,IAAK;EAC1B,OAAO;IACLZ,WAAW,EAAEY,KAAK,CAACZ,WAAW,CAAG;EACnC,CAAC;AACH,CAAC;;AAED;AACA;AACA,MAAMa,WAAW,GAAIC,QAAQ,IAAK;EAChC,OAAO;IACLf,gBAAgB,EAAEA,CAAA,KAAMe,QAAQ,CAACnB,qBAAqB,CAAC,CAAC,CAAC;IACzDM,aAAa,EAAGc,SAAS,IAAKD,QAAQ,CAAClB,kBAAkB,CAACmB,SAAS,CAAC;EACtE,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA,eAAerB,OAAO,CAACiB,QAAQ,EAAEE,WAAW,CAAC,CAACf,oBAAoB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}